version: '3'

volumes:
  pg_data:
  static:
  media:
  nginx_certs:
  nginx_vhost:
  nginx_html:

services:
  db:
    image: postgres:13.10
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    image: mak8779/foodgram_backend
    env_file: .env
    volumes:
      - static:/backend_static
      - media:/app/media
    depends_on:
      - db

  frontend:
    image: mak8779/foodgram_frontend
    env_file: .env
    command: cp -r /app/build/. /frontend_static/
    volumes:
      - static:/frontend_static

  gateway:
    image: mak8779/foodgram_gateway
    env_file: .env
    expose:
      - "80"
    volumes:
      - static:/staticfiles/
      - media:/app/media

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx_certs:/etc/nginx/certs:ro
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx_proxy_le
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx_certs:/etc/nginx/certs:rw
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
    depends_on:
      - nginx-proxy
